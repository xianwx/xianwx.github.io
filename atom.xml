<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>yuzixin&#39;s blog</title>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://www.xianwx.xyz/"/>
  <updated>2018-07-24T03:26:41.202Z</updated>
  <id>http://www.xianwx.xyz/</id>
  
  <author>
    <name>禹子歆</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Mac通过Privoxy共享shadowsocks代理给其它设备</title>
    <link href="http://www.xianwx.xyz/2018/07/24/mac-share-ss/"/>
    <id>http://www.xianwx.xyz/2018/07/24/mac-share-ss/</id>
    <published>2018-07-24T03:09:31.000Z</published>
    <updated>2018-07-24T03:26:41.202Z</updated>
    
    <content type="html"><![CDATA[<h1 id="WHY"><a href="#WHY" class="headerlink" title="WHY"></a>WHY</h1><p>ss通过socks5代理连接，属于局部代理。有些软件不支持sock5代理，只支持HTTP代理，或者你想让你的手机翻墙，就可以把本地的socks5代理共享出去，Mac OS本身没有这个功能，所以我们需要借助Privoxy。</p>
<h1 id="前置工作"><a href="#前置工作" class="headerlink" title="前置工作"></a>前置工作</h1><p>先确定你用的是不是ss，我用的另一个翻墙软件走的就已经是HTTP和HTTPS代理了。。。。如何确认呢？打开网络设置<br><img src="/images/107EA2CBA77698A10C6D445BFC50A2F2.jpg" alt="107EA2CBA77698A10C6D445BFC50A2F2"><br>如果是自动代理配置也行，先打开全局，还需要看看端口。</p>
<h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><p>执行命令安装：<br><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">brew install privoxy</div></pre></td></tr></table></figure></p>
<p>如果出现报错：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">The `brew link` step did not complete successfully.</div><div class="line">The formula built, but is not symlinked into /usr/local</div><div class="line">Could not symlink sbin/privoxy</div><div class="line">/usr/local/sbin is not writable.</div></pre></td></tr></table></figure></p>
<p>证明你缺少sbin这个文件夹或者文件夹的读写权限不正确，可以使用以下命令：<br><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">sudo mkdir /usr/<span class="built_in">local</span>/sbin</div><div class="line"><span class="comment">#(如果你没有这个文件夹的话，需要执行上面这一条)</span></div><div class="line"></div><div class="line">sudo chown -R <span class="string">'你的用户名'</span>:admin /usr/<span class="built_in">local</span>/sbin/</div></pre></td></tr></table></figure></p>
<p>使用这些命令创建以及修改权限结束，再重新link一下：<br><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">brew link privoxy</div></pre></td></tr></table></figure></p>
<h1 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h1><p>配置文件在<code>/usr/local/etc/privoxy/config</code>下，习惯用啥修改就用啥修改。<br>先找到<code>forward-socks5t  /</code>去掉注释，改为<code>forward-socks5t   /               127.0.0.1:1080  .</code>（我使用的是<code>forward-socks5   /               127.0.0.1:1080  .</code>，注意最后的<code>.</code>不要漏掉！）<br>这其中的<code>1080</code>端口是ss默认的端口，如果不是，请自己看自己的端口。</p>
<p>再找到<code>listen-address 127.0.0.1:8118</code>，去掉注释，改为<code>listen-address 0.0.0.0:8118</code>。<br><code>8118</code>是要开放给其它设备的端口，如果已经使用了，就换一个没被用的。</p>
<h1 id="运行"><a href="#运行" class="headerlink" title="运行"></a>运行</h1><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">cd</span> /usr/<span class="built_in">local</span>/sbin/  </div><div class="line">./privoxy –no-daemon /usr/<span class="built_in">local</span>/etc/privoxy/config &amp;</div><div class="line"><span class="comment"># 最后的 `&amp;` 是为了让 privoxy 在后台运行</span></div></pre></td></tr></table></figure>
<p>如果没有报错，就可以用了。</p>
<h1 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h1><ol>
<li>打开手机，与Mac连上同一个WiFi。</li>
<li>修改WiFi配置，把HTTP代理设置为手动</li>
<li>设置服务器为电脑局域网ip</li>
<li>设置端口为配置开放的端口（如上边的8118）</li>
<li>可以翻墙了</li>
</ol>
<h1 id="shutdown"><a href="#shutdown" class="headerlink" title="shutdown"></a>shutdown</h1><p>先查看进程id：<br><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ps aux | grep privoxy</div></pre></td></tr></table></figure></p>
<p>kill：<br><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo <span class="built_in">kill</span> 90986</div></pre></td></tr></table></figure></p>
<h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><p><a href="https://sebastianblade.com/share-macos-shadowsocks-proxy-to-other-device/" target="_blank" rel="external">共享 macOS 上的 ShadowSocks 代理给其他设备</a><br><a href="https://www.cnblogs.com/DeviLeo/p/6033591.html" target="_blank" rel="external">Mac上配置Privoxy</a><br><a href="https://blog.csdn.net/yanzi1225627/article/details/51064306" target="_blank" rel="external">Mac上Privoxy将shadowsocks的socks5代理转为http代理</a></p>
]]></content>
    
    <summary type="html">
    
      信不信我的最初目的其实是为了NS可以发截图到Twitter上？
    
    </summary>
    
      <category term="技术学习" scheme="http://www.xianwx.xyz/categories/%E6%8A%80%E6%9C%AF%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="mac" scheme="http://www.xianwx.xyz/tags/mac/"/>
    
  </entry>
  
  <entry>
    <title>Ubuntu Linux 16.04下如何安装Jenkins</title>
    <link href="http://www.xianwx.xyz/2018/07/23/linux-install-jenkins/"/>
    <id>http://www.xianwx.xyz/2018/07/23/linux-install-jenkins/</id>
    <published>2018-07-23T07:58:35.000Z</published>
    <updated>2018-07-24T03:28:20.212Z</updated>
    
    <content type="html"><![CDATA[<h1 id="安装Java"><a href="#安装Java" class="headerlink" title="安装Java"></a>安装Java</h1><a href="/2018/07/23/linux-install-java/" title="Ubuntu Linux 16.04下如何安装Java">Ubuntu Linux 16.04下如何安装Java</a>
<h1 id="安装Jenkins"><a href="#安装Jenkins" class="headerlink" title="安装Jenkins"></a>安装Jenkins</h1><p>很简单，只需要四个命令。<br><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">wget -q -O - https://pkg.jenkins.io/debian/jenkins-ci.org.key | sudo apt-key add -</div><div class="line">sudo sh -c <span class="string">'echo deb http://pkg.jenkins.io/debian-stable binary/ &gt; /etc/apt/sources.list.d</span></div><div class="line">sudo apt-get update</div><div class="line">sudo apt-get install jenkins</div></pre></td></tr></table></figure></p>
<p>（如果出现”subprocess installed post-installation script returned error exit status 1”，看另外一篇。）<br>等待安装完毕，即可反问Jenkins，默认端口8080，配置文件在<code>/etc/default/jenkins</code>里。<br>此时通过 ip:8080可以访问Jenkins，初次访问界面上会提供一个地址文件让你去看密码，取的密码后，新建一个admin的用户，就可以欢快的使用Jenkins了。</p>
]]></content>
    
    <summary type="html">
    
      人人都爱Jenkins
    
    </summary>
    
      <category term="技术学习" scheme="http://www.xianwx.xyz/categories/%E6%8A%80%E6%9C%AF%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="Linux" scheme="http://www.xianwx.xyz/tags/Linux/"/>
    
      <category term="Jenkins" scheme="http://www.xianwx.xyz/tags/Jenkins/"/>
    
  </entry>
  
  <entry>
    <title>Linux JDK多版本管理</title>
    <link href="http://www.xianwx.xyz/2018/07/23/alternatives-manage-jdk/"/>
    <id>http://www.xianwx.xyz/2018/07/23/alternatives-manage-jdk/</id>
    <published>2018-07-23T07:46:36.000Z</published>
    <updated>2018-07-23T07:51:32.469Z</updated>
    
    <content type="html"><![CDATA[<p>最近给远程Linux装Jenkins，已经预装好JDK 9，但是在安装Jenkins的时候一直出以下错误：</p>
<p><img src="/images/3DF39BE8305CF58C4BD4F2A8E64249D4.jpg" alt="3DF39BE8305CF58C4BD4F2A8E64249D4"></p>
<p>重点是：Found an incorrect Java version.原来是我的Java版本跟它要求的不符（妈蛋，我装的最新的啊！</p>
<p>我只好查了一下我装的版本需求的JDK是什么版本，哦，是JDK8.</p>
<p>8 我也有装啊兄弟！我们是自己人啊！干嘛报错啊！<br>于是运行：<br><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">java -version</div></pre></td></tr></table></figure></p>
<p>一检查，openjdk的版本是9，好的吧，我试试直接改环境变量<br><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">echo</span> <span class="string">"JAVA_HOME=/usr/lib/jvm/java-8-openjdk-amd64/"</span> &gt;&gt; /etc/environment</div><div class="line"><span class="built_in">source</span> /etc/environment</div></pre></td></tr></table></figure></p>
<p>然而并没有什么卵用。。。。敌人很火力很强，我们快支持不住了！</p>
<p>但系，有个软件可以很方便的管理多版本，那就是——alternatives。</p>
<p>执行命令<br><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">sudo update-alternatives --config java</div><div class="line">sudo update-alternatives --config javac</div></pre></td></tr></table></figure></p>
<p>执行了用数字序号来选择版本，再次执行<br><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">java -version</div></pre></td></tr></table></figure></p>
<p>来查看版本，发现已经被改了，nice！</p>
<p>对alternatives的更多了解，请查看我参考的文章：<a href="http://www.cnblogs.com/fordreamxin/p/4287706.html" target="_blank" rel="external">linux jdk版本随时切换</a></p>
]]></content>
    
    <summary type="html">
    
      你其实并不缺管理者
    
    </summary>
    
      <category term="技术学习" scheme="http://www.xianwx.xyz/categories/%E6%8A%80%E6%9C%AF%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="Linux" scheme="http://www.xianwx.xyz/tags/Linux/"/>
    
      <category term="alternatives" scheme="http://www.xianwx.xyz/tags/alternatives/"/>
    
      <category term="Java" scheme="http://www.xianwx.xyz/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>Ubuntu Linux 16.04下如何安装Java</title>
    <link href="http://www.xianwx.xyz/2018/07/23/linux-install-java/"/>
    <id>http://www.xianwx.xyz/2018/07/23/linux-install-java/</id>
    <published>2018-07-23T07:34:57.000Z</published>
    <updated>2018-07-23T07:48:44.960Z</updated>
    
    <content type="html"><![CDATA[<h1 id="搜索可以安装的JDK包"><a href="#搜索可以安装的JDK包" class="headerlink" title="搜索可以安装的JDK包"></a>搜索可以安装的JDK包</h1><p>使用命令：<br><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">apt-cache search openjdk</div></pre></td></tr></table></figure></p>
<p><img src="/images/BBDB7F41B79194165AD98AA280D9CC82.jpg" alt="BBDB7F41B79194165AD98AA280D9CC82"></p>
<h1 id="安装JDK"><a href="#安装JDK" class="headerlink" title="安装JDK"></a>安装JDK</h1><p>sudo apt-get install openjdk-9-jre openjdk-9-jdk</p>
<h1 id="配置JAVA-HOME"><a href="#配置JAVA-HOME" class="headerlink" title="配置JAVA_HOME"></a>配置JAVA_HOME</h1><p>安装完成可以执行命令来查看安装情况。<br><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">java -version</div></pre></td></tr></table></figure></p>
<p><img src="/images/163CF94DE061CDF1CA25196DF29AE8AF.jpg" alt="163CF94DE061CDF1CA25196DF29AE8AF"></p>
<p>然后在环境变量里设置JAVA_HOME的值，用命令：<br><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">echo</span> <span class="string">"JAVA_HOME=YOUR_JDK_PATH"</span> &gt;&gt; /etc/environment</div><div class="line"><span class="built_in">source</span> /etc/environment</div></pre></td></tr></table></figure></p>
<p>最后使用：<br><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">echo</span> <span class="variable">$JAVA_HOME</span></div></pre></td></tr></table></figure></p>
<p>来查看环境值设置的对不对。</p>
<h1 id="多版本JDK切换"><a href="#多版本JDK切换" class="headerlink" title="多版本JDK切换"></a>多版本JDK切换</h1><a href="/2018/07/23/alternatives-manage-jdk/" title="Linux JDK多版本管理">Linux JDK多版本管理</a>
<h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><p><a href="https://www.linuxidc.com/Linux/2017-11/148941.htm" target="_blank" rel="external">如何在Ubuntu和Debian中安装OpenJDK Java 9/8</a></p>
]]></content>
    
    <summary type="html">
    
      不装Java是不可能的，这辈子都不可能的。
    
    </summary>
    
      <category term="技术学习" scheme="http://www.xianwx.xyz/categories/%E6%8A%80%E6%9C%AF%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="Linux" scheme="http://www.xianwx.xyz/tags/Linux/"/>
    
      <category term="Java" scheme="http://www.xianwx.xyz/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>写cocos的时候一些踩雷记录</title>
    <link href="http://www.xianwx.xyz/2018/07/19/quick-cocos/"/>
    <id>http://www.xianwx.xyz/2018/07/19/quick-cocos/</id>
    <published>2018-07-19T03:48:05.000Z</published>
    <updated>2018-07-19T07:26:31.317Z</updated>
    
    <content type="html"><![CDATA[<h1 id="C-导出给LUA使用的时候"><a href="#C-导出给LUA使用的时候" class="headerlink" title="C++导出给LUA使用的时候"></a>C++导出给LUA使用的时候</h1><p>在导出给lua使用的时候，如果父类没有导出，那父控件继承的公共方法将没有。<br>比如 EffectLight 继承自 Effect Effect 继承自 Ref 如果不导出Effect 创建的EffectLight对象将没有retain方法，除非导出Effect。</p>
]]></content>
    
    <summary type="html">
    
      平常吐槽不停，真到写起来的时候反而记不起来了……
    
    </summary>
    
      <category term="技术学习" scheme="http://www.xianwx.xyz/categories/%E6%8A%80%E6%9C%AF%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="git" scheme="http://www.xianwx.xyz/tags/git/"/>
    
  </entry>
  
  <entry>
    <title>Android设置应用启动页</title>
    <link href="http://www.xianwx.xyz/2018/07/19/android-slash/"/>
    <id>http://www.xianwx.xyz/2018/07/19/android-slash/</id>
    <published>2018-07-19T03:34:12.000Z</published>
    <updated>2018-07-19T03:42:58.675Z</updated>
    
    <content type="html"><![CDATA[<p>最简单的方法无非是在游戏里设置……这样苹果和安卓都有了，还好加各种特效。<br>重点说一下给安卓加启动图，思路是：加一个新的activity，sleep一会儿，再跳到主activity。<br>好，新建一个activity叫SplashActivity，继承自Activity，不要继承自cocos的activity，它会自动去帮你走AppDelegate……<br>参考以下代码：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div></pre></td><td class="code"><pre><div class="line"><span class="meta">@Override</span></div><div class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</div><div class="line">    <span class="keyword">super</span>.onCreate(savedInstanceState);</div><div class="line">    getWindow().addFlags(WindowManager.LayoutParams.FLAG_FULLSCREEN);</div><div class="line">    <span class="comment">// 常亮</span></div><div class="line">    getWindow().addFlags(WindowManager.LayoutParams.FLAG_KEEP_SCREEN_ON);</div><div class="line"></div><div class="line">    <span class="comment">// 横屏旋转</span></div><div class="line">    setRequestedOrientation(ActivityInfo.SCREEN_ORIENTATION_SENSOR_LANDSCAPE);</div><div class="line"></div><div class="line">    <span class="comment">//隐藏虚拟按键，并且全屏</span></div><div class="line">    <span class="keyword">final</span> Window window = getWindow();</div><div class="line">    setHideVirtualKey(window);</div><div class="line">    window.getDecorView().setOnSystemUiVisibilityChangeListener(<span class="keyword">new</span> View.OnSystemUiVisibilityChangeListener() &#123;</div><div class="line">        <span class="meta">@Override</span></div><div class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onSystemUiVisibilityChange</span><span class="params">(<span class="keyword">int</span> visibility)</span> </span>&#123;</div><div class="line">            setHideVirtualKey(window);</div><div class="line">        &#125;</div><div class="line">    &#125;);</div><div class="line"></div><div class="line">    Log.i(<span class="string">"LUA"</span>, <span class="string">"on splash activity create"</span>);</div><div class="line">           <span class="comment">/*mainLayout初始化*/</span></div><div class="line"></div><div class="line">    LinearLayout mainLayout = <span class="keyword">new</span> LinearLayout(<span class="keyword">this</span>);</div><div class="line">    mainLayout.setBackgroundColor(Color.WHITE);</div><div class="line">    mainLayout.setLayoutParams(<span class="keyword">new</span> LinearLayout.LayoutParams(-<span class="number">1</span>,-<span class="number">1</span>));</div><div class="line">    mainLayout.setGravity(<span class="number">17</span>); <span class="comment">// 17 的意义是 "CENTER"</span></div><div class="line">    <span class="comment">/*iv初始化*/</span></div><div class="line">    ImageView iv = <span class="keyword">new</span> ImageView(<span class="keyword">this</span>);</div><div class="line">    iv.setLayoutParams(<span class="keyword">new</span> LinearLayout.LayoutParams(-<span class="number">1</span>,-<span class="number">2</span>));</div><div class="line">    iv.setScaleType(ImageView.ScaleType.CENTER);<span class="comment">//居中显示</span></div><div class="line">    <span class="keyword">int</span> resId=<span class="keyword">this</span>.getResources().getIdentifier(<span class="string">"bg"</span>,<span class="string">"drawable"</span>,getPackageName());</div><div class="line">    iv.setImageResource(resId);</div><div class="line">    mainLayout.addView(iv);<span class="comment">//添加iv</span></div><div class="line">    setContentView(mainLayout);<span class="comment">//显示manLayout</span></div><div class="line"></div><div class="line">    Thread myThread=<span class="keyword">new</span> Thread()&#123;<span class="comment">//创建子线程</span></div><div class="line">        <span class="meta">@Override</span></div><div class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</div><div class="line">            <span class="keyword">try</span>&#123;</div><div class="line">                sleep(<span class="number">2000</span>);<span class="comment">//使程序休眠五秒</span></div><div class="line">                Log.i(<span class="string">"LUA"</span>, <span class="string">"splash sleep end"</span>);</div><div class="line">                Intent it=<span class="keyword">new</span> Intent(getApplicationContext(), AppActivity.class);<span class="comment">//启动MainActivity</span></div><div class="line">                startActivity(it);</div><div class="line">                finish();<span class="comment">//关闭当前活动</span></div><div class="line">            &#125;<span class="keyword">catch</span> (Exception e)&#123;</div><div class="line">                e.printStackTrace();</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">    &#125;;</div><div class="line"></div><div class="line">    myThread.start();<span class="comment">//启动线程</span></div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setHideVirtualKey</span><span class="params">(Window window)</span></span>&#123;</div><div class="line">    <span class="comment">//保持布局状态</span></div><div class="line">    <span class="keyword">int</span> uiOptions = View.SYSTEM_UI_FLAG_LAYOUT_STABLE|</div><div class="line">            <span class="comment">//布局位于状态栏下方</span></div><div class="line">            View.SYSTEM_UI_FLAG_LAYOUT_HIDE_NAVIGATION|</div><div class="line">            <span class="comment">//全屏</span></div><div class="line">            View.SYSTEM_UI_FLAG_FULLSCREEN|</div><div class="line">            <span class="comment">//隐藏导航栏</span></div><div class="line">            View.SYSTEM_UI_FLAG_HIDE_NAVIGATION|</div><div class="line">            View.SYSTEM_UI_FLAG_LAYOUT_FULLSCREEN;</div><div class="line">    <span class="keyword">if</span> (Build.VERSION.SDK_INT&gt;=<span class="number">19</span>)&#123;</div><div class="line">        uiOptions |= <span class="number">0x00001000</span>;</div><div class="line">    &#125;<span class="keyword">else</span>&#123;</div><div class="line">        uiOptions |= View.SYSTEM_UI_FLAG_LOW_PROFILE;</div><div class="line">    &#125;</div><div class="line">    window.getDecorView().setSystemUiVisibility(uiOptions);</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="meta">@Override</span></div><div class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onResume</span><span class="params">()</span> </span>&#123;</div><div class="line">    <span class="keyword">super</span>.onResume();</div><div class="line">    <span class="keyword">final</span> Window window = getWindow();</div><div class="line">    setHideVirtualKey(window);</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>大概做的事情就是，创建一个layout，然后在layout里创建一个ImageView，图片为bg，为了使ImageView居中，所以设置了父控件的gravity，显示完了，创建一个线程，sleep2秒钟，跳到AppActivity，splash这个activity横屏且隐藏状态栏和虚拟按钮。<br>最后，记得把<strong>AndroidManifest</strong>里的启动activity换成新建的这个activity。</p>
<p>另外，为了让苹果的启动图时间久一点，可以在didFinishLaunchingWithOptions里加上一句<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">// 启动图片延时: 1秒</div><div class="line">[NSThread sleepForTimeInterval:1];</div></pre></td></tr></table></figure></p>
<p>经实测，1秒的效果蛮好的。</p>
]]></content>
    
    <summary type="html">
    
      Logo还是要的嘛，虽然安卓喜欢不要脸的……
    
    </summary>
    
      <category term="技术学习" scheme="http://www.xianwx.xyz/categories/%E6%8A%80%E6%9C%AF%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="Android" scheme="http://www.xianwx.xyz/tags/Android/"/>
    
      <category term="quick cocos" scheme="http://www.xianwx.xyz/tags/quick-cocos/"/>
    
  </entry>
  
  <entry>
    <title>Node如何处理POST请求</title>
    <link href="http://www.xianwx.xyz/2018/07/19/node-deal-post/"/>
    <id>http://www.xianwx.xyz/2018/07/19/node-deal-post/</id>
    <published>2018-07-19T03:16:55.000Z</published>
    <updated>2018-07-19T03:26:02.693Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// auth.js</span></div><div class="line"><span class="keyword">var</span> url = <span class="built_in">require</span>(<span class="string">'url'</span>);</div><div class="line"><span class="keyword">var</span> querystring = <span class="built_in">require</span>(<span class="string">'querystring'</span>);</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">auth</span>(<span class="params">req, res</span>) </span>&#123;</div><div class="line"></div><div class="line">    <span class="comment">//暂存请求体信息</span></div><div class="line">    <span class="keyword">var</span> body = <span class="string">""</span>;</div><div class="line"> </div><div class="line">    <span class="comment">//请求链接</span></div><div class="line">    <span class="built_in">console</span>.log(req.url);</div><div class="line"> </div><div class="line">    <span class="comment">//每当接收到请求体数据，累加到post中</span></div><div class="line">    req.on(<span class="string">'data'</span>, <span class="function"><span class="keyword">function</span> (<span class="params">chunk</span>) </span>&#123;</div><div class="line">        body += chunk;  <span class="comment">//一定要使用+=，如果body=chunk，因为请求favicon.ico，body会等于&#123;&#125;</span></div><div class="line">        <span class="built_in">console</span>.log(<span class="string">"chunk:"</span>,chunk);</div><div class="line">    &#125;);</div><div class="line"> </div><div class="line">    <span class="comment">//在end事件触发后，通过querystring.parse将post解析为真正的POST请求格式，然后向客户端返回。</span></div><div class="line">    req.on(<span class="string">'end'</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</div><div class="line">        <span class="comment">// 解析参数</span></div><div class="line">        body = querystring.parse(body);  <span class="comment">//将一个字符串反序列化为一个对象</span></div><div class="line">        <span class="built_in">console</span>.log(<span class="string">"body:"</span>,body);</div><div class="line"></div><div class="line">        <span class="comment">// 设置响应头部信息及编码</span></div><div class="line">        res.writeHead(<span class="number">200</span>, &#123;<span class="string">'Content-Type'</span>: <span class="string">'text/html; charset=utf8'</span>&#125;);</div><div class="line">        <span class="keyword">var</span> data = &#123;<span class="string">"code"</span>:<span class="number">200</span>, <span class="string">"msg"</span>:<span class="string">"success"</span>, <span class="string">"token"</span>:<span class="string">"token_"</span> + body.username + <span class="string">"_"</span> + body.password&#125;;</div><div class="line">        res.end(<span class="built_in">JSON</span>.stringify(data));</div><div class="line">    &#125;);</div><div class="line">&#125;</div><div class="line">exports.auth = auth;</div></pre></td></tr></table></figure>
<p><img src="/images/9F401EAC8A9114C972DCC8812E80871D.png" alt=""></p>
]]></content>
    
    <summary type="html">
    
      不给参数就捣蛋！
    
    </summary>
    
      <category term="技术学习" scheme="http://www.xianwx.xyz/categories/%E6%8A%80%E6%9C%AF%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="http" scheme="http://www.xianwx.xyz/tags/http/"/>
    
      <category term="Node" scheme="http://www.xianwx.xyz/tags/Node/"/>
    
  </entry>
  
  <entry>
    <title>Node使用路由的方式处理请求</title>
    <link href="http://www.xianwx.xyz/2018/07/19/http-route/"/>
    <id>http://www.xianwx.xyz/2018/07/19/http-route/</id>
    <published>2018-07-19T03:03:58.000Z</published>
    <updated>2018-07-19T03:16:06.030Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> auth = <span class="built_in">require</span>(<span class="string">'./auth'</span>);</div><div class="line">http.createServer(<span class="function"><span class="keyword">function</span>(<span class="params">request, response</span>)</span>&#123;</div><div class="line">    <span class="keyword">var</span> pathname = url.parse(request.url).pathname;</div><div class="line">    <span class="keyword">var</span> routeurl = &#123;</div><div class="line">        <span class="string">'/auth'</span> : auth.auth</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    connection.connect();</div><div class="line"></div><div class="line">    <span class="keyword">if</span>( <span class="keyword">typeof</span> routeurl[pathname]=== <span class="string">'function'</span> )&#123;</div><div class="line">        routeurl[pathname](request, response);</div><div class="line">    &#125;<span class="keyword">else</span>&#123;</div><div class="line">        <span class="built_in">console</span>.log(<span class="string">'404 not found!'</span>);</div><div class="line">        response.end();</div><div class="line">    &#125;</div><div class="line">&#125;).listen(<span class="number">3000</span>);</div><div class="line"><span class="built_in">console</span>.log(<span class="string">'server has started...'</span>);</div></pre></td></tr></table></figure>
<p>这样可以单独在auth文件里处理auth的逻辑，不用写一大堆东西在一个文件里了。</p>
]]></content>
    
    <summary type="html">
    
      你干你的，我干我的，互不相干。
    
    </summary>
    
      <category term="技术学习" scheme="http://www.xianwx.xyz/categories/%E6%8A%80%E6%9C%AF%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="http" scheme="http://www.xianwx.xyz/tags/http/"/>
    
      <category term="Node" scheme="http://www.xianwx.xyz/tags/Node/"/>
    
  </entry>
  
  <entry>
    <title>Node连接MySQL</title>
    <link href="http://www.xianwx.xyz/2018/07/19/node-connect-mysql/"/>
    <id>http://www.xianwx.xyz/2018/07/19/node-connect-mysql/</id>
    <published>2018-07-19T03:01:58.000Z</published>
    <updated>2018-07-19T03:03:55.815Z</updated>
    
    <content type="html"><![CDATA[<h1 id="安装MySQL"><a href="#安装MySQL" class="headerlink" title="安装MySQL"></a>安装MySQL</h1><h2 id="参考mysql安装，装5-7-22版本，注意它提示的密码，保存下来。"><a href="#参考mysql安装，装5-7-22版本，注意它提示的密码，保存下来。" class="headerlink" title="参考mysql安装，装5.7.22版本，注意它提示的密码，保存下来。"></a>参考<a href="https://blog.csdn.net/RunIntoLove/article/details/51422787" target="_blank" rel="external">mysql安装</a>，装5.7.22版本，注意它提示的密码，保存下来。</h2><h2 id="gui的使用参考MySQL-Workbench使用"><a href="#gui的使用参考MySQL-Workbench使用" class="headerlink" title="gui的使用参考MySQL Workbench使用"></a>gui的使用参考<a href="https://www.jianshu.com/p/dc58a4efdd84" target="_blank" rel="external">MySQL Workbench使用</a></h2><h1 id="Node-js里连接MySQL"><a href="#Node-js里连接MySQL" class="headerlink" title="Node.js里连接MySQL"></a>Node.js里连接MySQL</h1><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> mysql = <span class="built_in">require</span>(<span class="string">'mysql'</span>);</div><div class="line"><span class="keyword">var</span> connection = mysql.createConnection(&#123;</div><div class="line">    host        : <span class="string">'127.0.0.1'</span>,</div><div class="line">    port        : <span class="number">3306</span>,</div><div class="line">    user        : <span class="string">'root'</span>,</div><div class="line">    password    : <span class="string">'5429943'</span>,</div><div class="line">    database    : <span class="string">'center'</span></div><div class="line">&#125;);</div><div class="line"></div><div class="line">connection.connect();</div></pre></td></tr></table></figure>
<h1 id="相关报错处理"><a href="#相关报错处理" class="headerlink" title="相关报错处理"></a>相关报错处理</h1><p>对于报错：<code>Cannot find module &#39;mysql&#39; node.js</code><br>只需要执行：<br><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ln <span class="_">-s</span> /usr/<span class="built_in">local</span>/lib/node_modules /YOURPROJECTFOLDER/</div></pre></td></tr></table></figure></p>
<p>在安装完成MySQL后，先去使用<code>MySQL Workbench</code>修改密码。</p>
]]></content>
    
    <summary type="html">
    
      出来混的，总是要存的。
    
    </summary>
    
      <category term="技术学习" scheme="http://www.xianwx.xyz/categories/%E6%8A%80%E6%9C%AF%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="http" scheme="http://www.xianwx.xyz/tags/http/"/>
    
      <category term="Node" scheme="http://www.xianwx.xyz/tags/Node/"/>
    
  </entry>
  
  <entry>
    <title>怎么使用curl模拟http请求</title>
    <link href="http://www.xianwx.xyz/2018/07/19/how-to-use-curl/"/>
    <id>http://www.xianwx.xyz/2018/07/19/how-to-use-curl/</id>
    <published>2018-07-19T02:55:44.000Z</published>
    <updated>2018-07-19T02:59:17.666Z</updated>
    
    <content type="html"><![CDATA[<p>get方式请求：<br><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">curl 地址:端口/路由</div></pre></td></tr></table></figure></p>
<p>e.g:<br><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">curl 127.0.0.1:3000/test_sql</div></pre></td></tr></table></figure></p>
<p>post方式请求：<br><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">curl -X POST <span class="_">-d</span> <span class="string">"参数名=实参&amp;参数名=实参"</span> 地址:端口/路由</div></pre></td></tr></table></figure></p>
<p>e.g:<br><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">curl -X POST <span class="_">-d</span> <span class="string">"username=xianwx&amp;password=test"</span> 127.0.0.1:3000/auth</div></pre></td></tr></table></figure></p>
]]></content>
    
    <summary type="html">
    
      我不仅仅是个伪装者，我是D员！（嘘）
    
    </summary>
    
      <category term="技术学习" scheme="http://www.xianwx.xyz/categories/%E6%8A%80%E6%9C%AF%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="http" scheme="http://www.xianwx.xyz/tags/http/"/>
    
      <category term="Node" scheme="http://www.xianwx.xyz/tags/Node/"/>
    
  </entry>
  
  <entry>
    <title>Node学习记录</title>
    <link href="http://www.xianwx.xyz/2018/07/19/node-learn-record/"/>
    <id>http://www.xianwx.xyz/2018/07/19/node-learn-record/</id>
    <published>2018-07-19T02:22:25.000Z</published>
    <updated>2018-07-19T06:11:20.013Z</updated>
    
    <content type="html"><![CDATA[<h1 id="开启HTTP服务器"><a href="#开启HTTP服务器" class="headerlink" title="开启HTTP服务器"></a>开启HTTP服务器</h1><a href="/2018/07/19/node-start-server/" title="Node开启一个HTTP服务器">Node开启一个HTTP服务器</a>
<h1 id="如何使用curl"><a href="#如何使用curl" class="headerlink" title="如何使用curl"></a>如何使用curl</h1><a href="/2018/07/19/how-to-use-curl/" title="怎么使用curl模拟http请求">怎么使用curl模拟http请求</a>
<h1 id="Node如何使用路由形式"><a href="#Node如何使用路由形式" class="headerlink" title="Node如何使用路由形式"></a>Node如何使用路由形式</h1><a href="/2018/07/19/http-route/" title="Node使用路由的方式处理请求">Node使用路由的方式处理请求</a>
<h1 id="Node如何处理POST请求"><a href="#Node如何处理POST请求" class="headerlink" title="Node如何处理POST请求"></a>Node如何处理POST请求</h1><a href="/2018/07/19/node-deal-post/" title="Node如何处理POST请求">Node如何处理POST请求</a>
<h1 id="Node如何连接MySQL"><a href="#Node如何连接MySQL" class="headerlink" title="Node如何连接MySQL"></a>Node如何连接MySQL</h1><a href="/2018/07/19/node-connect-mysql/" title="Node连接MySQL">Node连接MySQL</a>
<h1 id="看书心得"><a href="#看书心得" class="headerlink" title="看书心得"></a>看书心得</h1><ul>
<li>Node有很多别称，Nodejs，Node.js，NodeJS等，都可以表明它是Node</li>
<li>设计高性能Web服务器的几个要点：事件驱动，非阻塞I/O</li>
<li>ajax的全称是AsynchronousJavascript+XML。即：异步传输+js+XML。是一种技术，只要是这样做的都可以称为ajax请求。</li>
<li>CommonJS规范的提出。</li>
</ul>
<p>—————————我是萌萌哒的分割线—————————</p>
<ul>
<li>上下文提供了exports对象用于导出当前模块的方法或者变量，并且是它唯一的导出的出口。</li>
<li>在Node中一个文件就是一个模块，在模块中存在一个module对象，它代表模块自身，exports也是module的属性。将方法挂载在exports对象上作为属性即可定义导出的方式。</li>
</ul>
]]></content>
    
    <summary type="html">
    
      记录自己的无知、愚蠢以及碎碎念。
    
    </summary>
    
      <category term="技术学习" scheme="http://www.xianwx.xyz/categories/%E6%8A%80%E6%9C%AF%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="http" scheme="http://www.xianwx.xyz/tags/http/"/>
    
      <category term="Node" scheme="http://www.xianwx.xyz/tags/Node/"/>
    
  </entry>
  
  <entry>
    <title>Node开启一个HTTP服务器</title>
    <link href="http://www.xianwx.xyz/2018/07/19/node-start-server/"/>
    <id>http://www.xianwx.xyz/2018/07/19/node-start-server/</id>
    <published>2018-07-19T02:16:51.000Z</published>
    <updated>2018-07-19T02:21:20.157Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"><span class="keyword">var</span> http = <span class="built_in">require</span> (<span class="string">'http'</span>);</div><div class="line"></div><div class="line">http.createServer(<span class="function"><span class="keyword">function</span>(<span class="params">request, response</span>)</span>&#123;&#125;).listen(<span class="number">3000</span>);</div><div class="line"><span class="built_in">console</span>.log(<span class="string">'server has started...'</span>);</div></pre></td></tr></table></figure>
<p>这样就成功开启了http的服务器，还可以看到命令台输出’server has started’。</p>
]]></content>
    
    <summary type="html">
    
      最简单的
    
    </summary>
    
      <category term="技术学习" scheme="http://www.xianwx.xyz/categories/%E6%8A%80%E6%9C%AF%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="http" scheme="http://www.xianwx.xyz/tags/http/"/>
    
      <category term="Node" scheme="http://www.xianwx.xyz/tags/Node/"/>
    
  </entry>
  
  <entry>
    <title>对远程服务器利用ssh传输文件</title>
    <link href="http://www.xianwx.xyz/2018/07/18/ssh-copy/"/>
    <id>http://www.xianwx.xyz/2018/07/18/ssh-copy/</id>
    <published>2018-07-18T10:37:29.000Z</published>
    <updated>2018-07-24T03:22:24.939Z</updated>
    
    <content type="html"><![CDATA[<h1 id="scp"><a href="#scp" class="headerlink" title="scp"></a>scp</h1><p>利用scp传输文件：</p>
<p>传输本地文件到远端：<br><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">scp /path/filename username@servername:/path</div></pre></td></tr></table></figure></p>
<p>e.g：<br><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">scp ~/Downloads/skynetx-ubuntu-v2.0.29.tar.gz ubuntu@你猜ip是啥:~/code/</div></pre></td></tr></table></figure></p>
<p>然后输个密码就好了。</p>
<p>传输远端文件到本地：<br><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">cp username@servername:/path/filename /var/www/local_dir（本地目录）</div></pre></td></tr></table></figure></p>
]]></content>
    
    <summary type="html">
    
      ssh这么好用的吗！
    
    </summary>
    
      <category term="技术学习" scheme="http://www.xianwx.xyz/categories/%E6%8A%80%E6%9C%AF%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="Linux" scheme="http://www.xianwx.xyz/tags/Linux/"/>
    
      <category term="mac" scheme="http://www.xianwx.xyz/tags/mac/"/>
    
      <category term="ssh" scheme="http://www.xianwx.xyz/tags/ssh/"/>
    
  </entry>
  
  <entry>
    <title>给云服务器安装HTTP服务器</title>
    <link href="http://www.xianwx.xyz/2018/07/18/http-server-on-origin-linux/"/>
    <id>http://www.xianwx.xyz/2018/07/18/http-server-on-origin-linux/</id>
    <published>2018-07-18T10:33:08.000Z</published>
    <updated>2018-07-18T10:36:48.339Z</updated>
    
    <content type="html"><![CDATA[<ol>
<li>Node的安装<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">curl <span class="_">-s</span>L https://deb.nodesource.com/setup_9.x | sudo -E bash -</div><div class="line">sudo apt-get install -y nodejs</div></pre></td></tr></table></figure>
</li>
</ol>
<p>这种安装方法的好处是：直接安装在系统环境/usr/bin目录下，之后使用npm -g安装其他插件也会安装到/usr/lib/node_modules(需要使用sudo权限)</p>
<ol>
<li><p>软链接到项目文件夹下边</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ln <span class="_">-s</span> /usr/lib/node_modules /YOUR_PROJ/</div></pre></td></tr></table></figure>
</li>
<li><p>安装MySQL：使用下面三行命令：</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo apt-get install mysql-server sudo apt install mysql-client sudo apt install libmysqlclient-dev</div></pre></td></tr></table></figure>
</li>
<li><p>使用命令检查MySQL的安装是否成功：</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo netstat -tap | grep mysql</div></pre></td></tr></table></figure>
</li>
<li><p>使用以下命令进入MySQL状态：</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">mysql -uroot -p你的密码</div></pre></td></tr></table></figure>
</li>
<li><p>为了可以远程访问MySQL，修改配置：</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo vi /etc/mysql/mysql.conf.d/mysqld.cnf</div></pre></td></tr></table></figure>
</li>
</ol>
<p>注释掉<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">bind-address = 127.0.0.1</div></pre></td></tr></table></figure></p>
<p>wq保存退出</p>
<ol>
<li><p>重新进入MySQL命令状态，执行以下两条代码：</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">grant all on *.* to root@<span class="string">'%'</span> identified by <span class="string">'你的密码'</span> with grant option;</div><div class="line">flush privileges;</div></pre></td></tr></table></figure>
</li>
<li><p>quit MySQL命令行，执行重启命令：</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo /etc/init.d/mysql restart</div></pre></td></tr></table></figure>
</li>
</ol>
<p>命令汇总：<br><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">sudo /etc/init.d/mysql start</div><div class="line">sudo /etc/init.d/mysql stop</div><div class="line">sudo /etc/init.d/mysql restart</div></pre></td></tr></table></figure></p>
<ol>
<li>使用MySQL workbench连接远程数据库执行创建数据库等操作。</li>
<li><p>给Node安装MySQL插件</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo npm install -g mysql</div></pre></td></tr></table></figure>
</li>
<li><p>启动http服务器</p>
</li>
</ol>
]]></content>
    
    <summary type="html">
    
      我们不仅没有返回，而且还没有响应。
    
    </summary>
    
      <category term="技术学习" scheme="http://www.xianwx.xyz/categories/%E6%8A%80%E6%9C%AF%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="Linux" scheme="http://www.xianwx.xyz/tags/Linux/"/>
    
      <category term="http" scheme="http://www.xianwx.xyz/tags/http/"/>
    
      <category term="server" scheme="http://www.xianwx.xyz/tags/server/"/>
    
  </entry>
  
  <entry>
    <title>给远程云服务器部署skynet服务器</title>
    <link href="http://www.xianwx.xyz/2018/07/18/skynet-server-on-origin-linux/"/>
    <id>http://www.xianwx.xyz/2018/07/18/skynet-server-on-origin-linux/</id>
    <published>2018-07-18T10:25:42.000Z</published>
    <updated>2018-07-18T10:32:36.811Z</updated>
    
    <content type="html"><![CDATA[<p>为了给策划能够外网调试，租了一台云服务器用来部署猫与剑的服务器，算是个备忘录吧，以及介绍如何在远程服务器上部署跟skynet有关的服务器。</p>
<ol>
<li>clone 代码</li>
<li><p>给Ubuntu安装brew，命令：</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo apt install linuxbrew-wrapper</div></pre></td></tr></table></figure>
</li>
<li><p>执行一下brew，等待成功。(不成功多试几次)</p>
</li>
<li><p>执行命令，修改环境变量：</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">export</span> PATH=<span class="string">"/home/ubuntu/.linuxbrew/bin:<span class="variable">$PATH</span>"</span></div></pre></td></tr></table></figure>
</li>
<li><p>brew前置命令：</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">brew doctor</div></pre></td></tr></table></figure>
</li>
<li><p>安装luarocks，执行命令：</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo apt install luarocks</div></pre></td></tr></table></figure>
</li>
<li><p>安装luarocks，执行命令 ： </p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">luarocks install busted</div></pre></td></tr></table></figure>
</li>
<li><p>安装luacheck，执行命令：</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">luarocks install luacheck</div></pre></td></tr></table></figure>
</li>
</ol>
<p>以上2条命令不行就加上sudo）</p>
<ol>
<li>下载sx.tar.gz。(在我coding里有存着)</li>
<li><p>安装skynetx，执行命令：</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo tar -ovxzf code/skynetx-ubuntu-v2.0.29.tar.gz -C /usr --strip-components 1</div></pre></td></tr></table></figure>
</li>
<li><p>我们游戏还需要个HTTP服务器，需要安装Node<br>[更新]Nodejs的安装使用其它方式，不采用下面做法了。<br><del>12. 安装Node，命令：sudo apt-get install nodejs</del><br><del>13. 安装npm，命令：sudo apt-get install npm</del><br><del>14. 安装完毕，可以执行nodejs —version查看安装结果</del><br><del>15. 这里使用的nodejs命令比较麻烦，想使用平常用的node命令，可以使用sudo ln -s /usr/bin/nodejs /usr/bin/node来软连接nodejs 到node</del></p>
</li>
</ol>
]]></content>
    
    <summary type="html">
    
      不是私服，不是私服，不是私服。
    
    </summary>
    
      <category term="技术学习" scheme="http://www.xianwx.xyz/categories/%E6%8A%80%E6%9C%AF%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="Linux" scheme="http://www.xianwx.xyz/tags/Linux/"/>
    
      <category term="server" scheme="http://www.xianwx.xyz/tags/server/"/>
    
      <category term="skynet" scheme="http://www.xianwx.xyz/tags/skynet/"/>
    
  </entry>
  
  <entry>
    <title>Linux root用户</title>
    <link href="http://www.xianwx.xyz/2018/07/18/root-user/"/>
    <id>http://www.xianwx.xyz/2018/07/18/root-user/</id>
    <published>2018-07-18T10:22:19.000Z</published>
    <updated>2018-07-18T10:24:53.389Z</updated>
    
    <content type="html"><![CDATA[<p>有时候在Linux上执行命令会碰到”Permission denied, are you root?”这种报错，这代表我们需要进入root用户执行命令，可以使用以下命令进入root<br><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo -i</div></pre></td></tr></table></figure></p>
<p>在root用户状态下，输入命令exit退出root用户状态。</p>
<p>尤其跟别人共用一台云服务器的时候，好刺激。</p>
]]></content>
    
    <summary type="html">
    
      我是老大，你们都得听我的。
    
    </summary>
    
      <category term="技术学习" scheme="http://www.xianwx.xyz/categories/%E6%8A%80%E6%9C%AF%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="Linux" scheme="http://www.xianwx.xyz/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>tmux的使用</title>
    <link href="http://www.xianwx.xyz/2018/07/18/tmux/"/>
    <id>http://www.xianwx.xyz/2018/07/18/tmux/</id>
    <published>2018-07-18T10:16:47.000Z</published>
    <updated>2018-07-18T10:21:53.153Z</updated>
    
    <content type="html"><![CDATA[<p>最近在给猫与剑做服务器，租了一台腾讯云服务器，要在上边搭建，每次ssh过去发现看不到log，不好创建tab等等问题，于是找了这个神器。</p>
<h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><p>在Mac上也可以使用tmux，想尝鲜可以在Mac上先安起来，安装方式：<br><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">brew install tmux</div></pre></td></tr></table></figure></p>
<h1 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h1><p>tmux简单来说就是终端里的『窗口管理器』，如果我使用终端登录到远程主机并运行前台程序，那么这个窗口等于就被占用了，想要看一下 CPU 的使用率，就得再连接一次。但是如果在远程主机上运行 tmux，那么就可以开启多个控制台（类似于窗口），相当高效。如果想查看之前执行命令的log，比如redis的输出等，就很方便了。</p>
<p>Seesion 可以有效地分离工作环境。</p>
<ul>
<li><p>tmux new -s session_name<br>创建一个叫做 session_name 的 tmux session</p>
</li>
<li><p>tmux attach -t session_name<br>重新开启叫做 session_name 的 tmux session</p>
</li>
<li><p>tmux switch -t session_name<br>转换到叫做 session_name 的 tmux session</p>
</li>
<li><p>tmux list-sessions<br>列出现有的所有 session</p>
</li>
<li><p>tmux detach (prefix + d)<br>离开当前开启的 session</p>
</li>
</ul>
<p>我使用tmux new -s work创建一个叫work的session，关闭当前标签页，再使用tmux attach -t work，就可以重新看到之前的tmux session。</p>
<p>Tmux 有一个含有标签的界面，但是它命名这些标签为 “Windows”。为了保持有序，可以重新命名所有我使用的 windows；</p>
<ul>
<li><p>tmux new-window (perfix + c)<br>创建一个新的 window</p>
</li>
<li><p>tmux select-window -t :0-9 (perfix + 0-9)<br>根据索引转到该 window</p>
</li>
<li><p>tmux rename-window (perfix + ,)<br>重命名当前 window</p>
</li>
</ul>
<p>perfix为tmux的命令行模式，默认是Ctrl+b，比如new window，可以先按Ctrl+b，然后输入c。</p>
<p>tmux模式下，tmux会监管鼠标的滚动事件。所以没法使用鼠标上下滚动看屏幕输出，这时候可以：</p>
<ul>
<li>Ctrl+b，输入:，即可进入命令行模式。</li>
<li>输入命令：<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">setw -g mouse on</div></pre></td></tr></table></figure>
</li>
</ul>
<p>如果以上命令想使用配置文件配置，load配置文件的时候出现unknown option: mode-mouse错误；<br>可以用</p>
<p>set-option -g mouse on<br>代替以上代码就OK了！</p>
<h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><p>参考资料：</p>
<ul>
<li><a href="http://blog.jeswang.org/blog/2013/06/24/tmux-kuai-su-jiao-cheng/" target="_blank" rel="external">Tmux 快速教程</a></li>
<li><a href="https://wdxtub.com/2016/03/30/tmux-guide/" target="_blank" rel="external">tmux指南</a></li>
</ul>
]]></content>
    
    <summary type="html">
    
      对Linux宝具，tmux咖喱棒！
    
    </summary>
    
      <category term="技术学习" scheme="http://www.xianwx.xyz/categories/%E6%8A%80%E6%9C%AF%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="tmux" scheme="http://www.xianwx.xyz/tags/tmux/"/>
    
  </entry>
  
  <entry>
    <title>解决Gradle project sync failed. Please fix your project and try again.</title>
    <link href="http://www.xianwx.xyz/2018/07/18/fix-gradle-project-sync-failed/"/>
    <id>http://www.xianwx.xyz/2018/07/18/fix-gradle-project-sync-failed/</id>
    <published>2018-07-18T10:09:49.000Z</published>
    <updated>2018-07-18T10:15:38.918Z</updated>
    
    <content type="html"><![CDATA[<p>点击tools->Android->Sync Project with Gradle Files.</p>
<p><img src="/images/2BBAF29B400EFFD28042FC244416C659.jpg" alt=""></p>
]]></content>
    
    <summary type="html">
    
      偶尔会碰到的Android studio的傲娇
    
    </summary>
    
      <category term="技术学习" scheme="http://www.xianwx.xyz/categories/%E6%8A%80%E6%9C%AF%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="Android" scheme="http://www.xianwx.xyz/tags/Android/"/>
    
  </entry>
  
  <entry>
    <title>Mac使用记录</title>
    <link href="http://www.xianwx.xyz/2018/07/18/mac-command/"/>
    <id>http://www.xianwx.xyz/2018/07/18/mac-command/</id>
    <published>2018-07-18T09:48:48.000Z</published>
    <updated>2018-07-24T03:21:33.442Z</updated>
    
    <content type="html"><![CDATA[<p>为了拥有友好的开发环境，毅然选择了Mac，现在60键的键盘爽到飞起。<br>扯远了扯远了，还是正经记录吧。</p>
<h1 id="命令"><a href="#命令" class="headerlink" title="命令"></a>命令</h1><p>如果不管命令执行是否成功都往下执行，可以用;分割多个语句放在一行执行，如果希望前面的执行成功才执行后面的语句，用&amp;&amp;分割语句。</p>
<p>在 fish里 &amp;&amp; 用 and代替</p>
<p>在macOS High Sierra里，finder可以用快捷键来显示和隐藏文件夹了：<br><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">Command + Shift + .</div></pre></td></tr></table></figure></p>
<p>或者使用命令：<br><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">defaults write com.apple.finder AppleShowAllFiles -bool <span class="literal">true</span></div></pre></td></tr></table></figure></p>
<h1 id="ftp命令"><a href="#ftp命令" class="headerlink" title="ftp命令"></a>ftp命令</h1><p>Mac系统10.x过后没有ftp命令，用以下3个命令开起来：</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">brew install telnet</div><div class="line">brew install inetutils</div><div class="line">brew link --overwrite inetutils</div></pre></td></tr></table></figure>
<h1 id="MySQL-workbench的使用"><a href="#MySQL-workbench的使用" class="headerlink" title="MySQL workbench的使用"></a>MySQL workbench的使用</h1><p>1. 创建连接</p>
<p><img src="/images/35B48DAD4E40D85B51F961F42CFDDD2A.jpg" alt=""></p>
<p>2. 创建默认的schema<br><img src="/images/14D6CC4556F6F4E73E2FB578D0D2F26E.jpg" alt=""></p>
<p>3. 右键新创建的schema，set as default schema</p>
<p>4. 可以开始创建table了。</p>
<h1 id="将Mac的ss代理共享给其它设备"><a href="#将Mac的ss代理共享给其它设备" class="headerlink" title="将Mac的ss代理共享给其它设备"></a>将Mac的ss代理共享给其它设备</h1>]]></content>
    
    <summary type="html">
    
      使用Mac的时候碰到的一些事情的记录。
    
    </summary>
    
      <category term="技术学习" scheme="http://www.xianwx.xyz/categories/%E6%8A%80%E6%9C%AF%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="mac" scheme="http://www.xianwx.xyz/tags/mac/"/>
    
  </entry>
  
  <entry>
    <title>LuaJavaBridge</title>
    <link href="http://www.xianwx.xyz/2018/06/05/LuaJavaBridge/"/>
    <id>http://www.xianwx.xyz/2018/06/05/LuaJavaBridge/</id>
    <published>2018-06-05T02:06:04.000Z</published>
    <updated>2018-06-05T03:44:48.738Z</updated>
    
    <content type="html"><![CDATA[<p>用quick cocos开发游戏的时候，如果你有接入过SDK，或者做过复制到剪贴板，获取设备信息等，肯定就会碰到Lua调用Java层的需求。<br>于是就需要用到：LuaJavaBridge。</p>
<p>在使用require “framework”过后，可以直接使用luaj（具体可以查看luaj.lua）<br>这篇文章主要记录如何使用。</p>
<h2 id="1-使用"><a href="#1-使用" class="headerlink" title="1. 使用"></a>1. 使用</h2><p>luaj和luaoc都是调用的static方法<br>所以，在Java层加上一个public的static方法，如：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">testLuaj</span><span class="params">()</span></span>&#123;</div><div class="line">    Log.i(<span class="string">"Luaj"</span>, <span class="string">"testLuaj"</span>);</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>quick cocos运行的主activity是AppActivity，完整类名称为：org/cocos2dx/lua/AppActivity<br>所以，在lua层可以使用如下代码调用：<br><figure class="highlight lua"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">luaj.callStaticMethod(<span class="string">"org/cocos2dx/lua/AppActivity"</span>,<span class="string">"testLuaj"</span>,&#123;&#125;,<span class="string">"()V"</span>)</div></pre></td></tr></table></figure></p>
<h2 id="2-参数介绍"><a href="#2-参数介绍" class="headerlink" title="2. 参数介绍"></a>2. 参数介绍</h2><p>第一个参数是完整的类名称，“.”需要使用“/”，如”org/cocos2dx/lua/AppActivity”<br>第二个参数是方法名，如”testLuaj”<br>第三个参数是参数，无参数的时候使用空table<br>第四个参数指定参数的类型和返回类型的签名</p>
<h2 id="3-参数类型"><a href="#3-参数类型" class="headerlink" title="3. 参数类型"></a>3. 参数类型</h2><p>签名                                         解释<br>()V                             参数：无，返回值：无<br>(I)V                            参数：int，返回值：无<br>(Ljava/lang/String;)Z           参数：字符串，返回值：布尔值<br>(IF)Ljava/lang/String;          参数：整数、浮点数，返回值：字符串</p>
<p>类型名                 类型<br>I                       整数，或者 Lua function<br>F                       浮点数<br>Z                       布尔值<br>Ljava/lang/String;      字符串<br>V                       Void 空，仅用于指定一个 Java 方法不返回任何值</p>
<h2 id="4-error-code"><a href="#4-error-code" class="headerlink" title="4. error code"></a>4. error code</h2><p>错误代码                            描述<br>-1                          不支持的参数类型或返回值类型<br>-2                          无效的签名<br>-3                          没有找到指定的方法<br>-4                          Java 方法执行时抛出了异常<br>-5                          Java 虚拟机出错<br>-6                          Java 虚拟机出错</p>
<ul>
<li>附：参数类型和error code懒得自己写，从<a href="https://blog.csdn.net/li15225271052/article/details/70148609" target="_blank" rel="external">Vincent__Lee的CSDN博客</a>拷贝过来的。</li>
</ul>
<h2 id="5-返回值"><a href="#5-返回值" class="headerlink" title="5. 返回值"></a>5. 返回值</h2><p>luaj有两个返回值，一个是调用结果，一个是返回值。<br>如：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">getProvider</span><span class="params">()</span></span>&#123;</div><div class="line">    <span class="keyword">return</span> <span class="string">"TapTap"</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<figure class="highlight lua"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="comment">-- Ljava/lang/String;的;是不可省略的</span></div><div class="line"><span class="keyword">local</span> ok, result = luaj.callStaticMethod(<span class="string">"org/cocos2dx/lua/AppActivity"</span>, <span class="string">"getProvider"</span>, &#123;&#125;, <span class="string">"()Ljava/lang/String;"</span>)</div><div class="line"><span class="built_in">print</span>(<span class="string">"执行结果："</span>, ok)</div><div class="line"><span class="built_in">print</span>(<span class="string">"provider: "</span>, result)</div></pre></td></tr></table></figure>
<h2 id="6-特别介绍"><a href="#6-特别介绍" class="headerlink" title="6. 特别介绍"></a>6. 特别介绍</h2><p>可以将lua的方法作为int类型参数传入Java方法<br>也可以把table转换为json传入<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">testLuaCallback</span><span class="params">(<span class="keyword">final</span> <span class="keyword">int</span> callback, <span class="keyword">final</span> String args)</span></span>&#123;</div><div class="line">    AppActivity.activity.runOnUiThread(<span class="keyword">new</span> Runnable() &#123;</div><div class="line">        <span class="meta">@Override</span></div><div class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</div><div class="line">            <span class="keyword">try</span> &#123;</div><div class="line">                JSONObject argsJ = <span class="keyword">new</span> JSONObject(args);</div><div class="line"></div><div class="line">                <span class="comment">// 可以通过这种方法获取lua传入的值</span></div><div class="line">                String testId = argsJ.getInt(<span class="string">"id"</span>)</div><div class="line">                String testVal = argsJ.getString(<span class="string">"val"</span>);</div><div class="line"></div><div class="line">                <span class="comment">// ok为传入到lua回调的参数</span></div><div class="line">                Cocos2dxLuaJavaBridge.callLuaFunctionWithString(callback, <span class="string">"ok"</span>);</div><div class="line">                Cocos2dxLuaJavaBridge.releaseLuaFunction(callback);</div><div class="line"></div><div class="line">            &#125; <span class="keyword">catch</span> (JSONException e) &#123;</div><div class="line">                e.printStackTrace();</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">    &#125;);</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<figure class="highlight lua"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">local</span> <span class="function"><span class="keyword">function</span> <span class="title">callback</span><span class="params">(result)</span></span></div><div class="line">    <span class="built_in">print</span>(<span class="string">"result"</span>) <span class="comment">-- 会打印出ok</span></div><div class="line"><span class="keyword">end</span></div><div class="line"></div><div class="line"><span class="keyword">local</span> args = json.encode(&#123; id = <span class="number">1</span>, val = <span class="string">"test"</span> &#125;)</div><div class="line">luaj.callStaticMethod(<span class="string">"org/cocos2dx/lua/AppActivity"</span>, <span class="string">"testLuaCallback"</span>, &#123;callback, args&#125;, <span class="string">"(ILjava/lang/String;)V"</span>)</div></pre></td></tr></table></figure>
<h2 id="7-注意"><a href="#7-注意" class="headerlink" title="7. 注意"></a>7. 注意</h2><p>直接使用LuaObjcBridge的时候要注意，参数必须是3个<br>LuaObjcBridge.callStaticMethod(“AppController”, “getProvider”)<br>会导致执行失败<br>LuaObjcBridge.callStaticMethod(“AppController”, “getProvider”, nil)<br>luaoc.callStaticMethod就是3个参数，少传一个是自动帮你传了nil过去，所以不会出错。</p>
]]></content>
    
    <summary type="html">
    
      让Lua和Java互操
    
    </summary>
    
      <category term="技术学习" scheme="http://www.xianwx.xyz/categories/%E6%8A%80%E6%9C%AF%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="cocos" scheme="http://www.xianwx.xyz/tags/cocos/"/>
    
  </entry>
  
</feed>
