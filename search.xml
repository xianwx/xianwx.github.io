<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
    
    <entry>
      <title><![CDATA[lua的元表以及多继承]]></title>
      <url>https://xianwx.github.io/2016/09/23/lua-multiple-inheritance/</url>
      <content type="html"><![CDATA[<p>最近做开发的时候，有个类想要继承自多个类，虽然这种情况基本说很少（好像也不少），但还是说一下如何在lua里实现多继承。<br>其实很简单，首先要了解lua元表，以及lua类的实现方法。</p>
<h2 id="lua元表"><a href="#lua元表" class="headerlink" title="lua元表"></a>lua元表</h2><p>用lua的人都知道lua的table的强大，table有一套hashmap的查找机制，如果访问一个表中并不存在的字段，不会立即返回nil，而是先<code>触发一套查找机制，也是我们用以实现面向对象的方法</code>。<br>简单的描述：<code>元表就是用于查找的备用表。</code><br>比如：<br><figure class="highlight lua"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">local</span> my = &#123;&#125;</div><div class="line"><span class="built_in">print</span>(my.money) <span class="comment">-- my中没有money字段，所以打印出来的会是nil</span></div></pre></td></tr></table></figure></p>
<p>这里的执行结果很明显会是nil，没有疑问。<br>但是如果我设置了元表：<br><figure class="highlight lua"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">local</span> fathermayun = &#123;</div><div class="line">    money = <span class="number">13000000000</span></div><div class="line">&#125;</div><div class="line"><span class="keyword">local</span> my = &#123;&#125;</div><div class="line"><span class="built_in">setmetatable</span>(my, fathermayun)</div><div class="line"><span class="built_in">print</span>(my.money)</div></pre></td></tr></table></figure></p>
<p>这里的执行结果是！！！！！！！<br><code>nil</code><br>为什么？因为没有设置<code>__index</code></p>
<h2 id="index"><a href="#index" class="headerlink" title="__index"></a>__index</h2><p>简单的描述：<code>是当table中一个元素不存在的时候，会触发寻找元表的__index元方法，如果不存在，则返回nil，如果存在，则返回结果。</code><br>所以，把上述代码改成<br><figure class="highlight lua"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">local</span> fathermayun = &#123;</div><div class="line">    money = <span class="number">13000000000</span></div><div class="line">&#125;</div><div class="line">fathermayun.__index = fathermayun</div><div class="line"><span class="keyword">local</span> my = &#123;&#125;</div><div class="line"><span class="built_in">setmetatable</span>(my, fathermayun)</div><div class="line"><span class="built_in">print</span>(my.money)</div></pre></td></tr></table></figure></p>
<p>这里的执行结果将是13000000000，我终于有钱了:)<br>上面的执行过程是：<br>访问my.money-&gt;发现没有这个字段-&gt;my有元表-&gt;查找元表fathermayun-&gt;lua不会直接找fathermayun里的money字段-&gt;lua发现fathermayun有元方法<strong>index-&gt;调用元方法-&gt;获得money的值
</strong>index有以下取值<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">表，会直接在表里找</div><div class="line">函数，返回函数的返回值</div></pre></td></tr></table></figure></p>
<h2 id="继承"><a href="#继承" class="headerlink" title="继承"></a>继承</h2><p>利用上述知识随手写了个实现面向对象的方法，不是很完善<br><figure class="highlight lua"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">local</span> <span class="function"><span class="keyword">function</span> <span class="title">class</span><span class="params">(super)</span></span></div><div class="line">    <span class="keyword">local</span> cls</div><div class="line">    <span class="keyword">if</span> super <span class="keyword">then</span></div><div class="line">        cls = &#123;&#125;</div><div class="line">        cls.super = super</div><div class="line">        <span class="built_in">setmetatable</span>(cls, &#123;__index = super&#125;)</div><div class="line">    <span class="keyword">else</span></div><div class="line">        <span class="comment">-- ctor是构造函数的命名</span></div><div class="line">        cls = &#123;ctor = <span class="function"><span class="keyword">function</span> <span class="params">()</span></span> <span class="keyword">end</span>&#125;</div><div class="line">    <span class="keyword">end</span></div><div class="line"></div><div class="line">    cls.__index = cls</div><div class="line">    <span class="function"><span class="keyword">function</span> <span class="title">cls.new</span><span class="params">(...)</span></span></div><div class="line">        <span class="keyword">local</span> instance = <span class="built_in">setmetatable</span>(&#123;&#125;, cls)</div><div class="line">        cls:ctor(...)</div><div class="line">        <span class="keyword">return</span> instance</div><div class="line">    <span class="keyword">end</span></div><div class="line">    <span class="keyword">return</span> cls</div><div class="line"><span class="keyword">end</span></div></pre></td></tr></table></figure></p>
<p>挺简单的，注释就不写了……让我们来测试一下<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">local Test = class()</div><div class="line">function Test:doSomething()</div><div class="line">    print(&quot;test doSomething&quot;)</div><div class="line">end</div><div class="line">local test = Test.new()</div><div class="line">test:doSomething()</div></pre></td></tr></table></figure></p>
<p>成功打印出”test doSomething”<br>接下来试试继承<br><figure class="highlight lua"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">local</span> Test = class()</div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">Test:doSomething</span><span class="params">()</span></span></div><div class="line">    <span class="built_in">print</span>(<span class="string">"test doSomething"</span>)</div><div class="line"><span class="keyword">end</span></div><div class="line"><span class="keyword">local</span> Test2 = class(Test)</div><div class="line"><span class="keyword">local</span> test = Test2.new()</div><div class="line">test:doSomething()</div></pre></td></tr></table></figure></p>
<p>也可以成功打印出”test doSomething”，继承成功<br>为什么能继承成功？原因如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">在new的时候，创建一个table并返回，即创建一个实例，实例可以有自己的字段，比如Test类的doSomething，该字段是个函数，可以调用执行。实例的元表是cls，如果调用实例没有的字段，会去cls里找</div><div class="line">cls设置了元方法__index = cls</div><div class="line">如果没有super，则只有一个构造函数方法</div><div class="line">如果有super，cls的元表是super，元表的元方法也正确的设置了</div><div class="line">所以，在Test2是继承自Test的，它的实例test调用doSomething，找不到，去元表里找，元表发现自己有父类，去父类里找，成功找到。</div></pre></td></tr></table></figure></p>
<h2 id="多继承"><a href="#多继承" class="headerlink" title="多继承"></a>多继承</h2><p>如果我想要继承多个父类，怎么办？<br>其实思路很简单，把<code>元方法改成函数即可。</code><br>举例子：<br><figure class="highlight lua"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">local</span> <span class="function"><span class="keyword">function</span> <span class="title">search</span><span class="params">(key, tables)</span></span></div><div class="line">    <span class="keyword">for</span> _, super <span class="keyword">in</span> <span class="built_in">ipairs</span>(tables) <span class="keyword">do</span></div><div class="line">        <span class="keyword">if</span> super[key] <span class="keyword">then</span></div><div class="line">            <span class="keyword">return</span> super[key]</div><div class="line">        <span class="keyword">end</span></div><div class="line">    <span class="keyword">end</span></div><div class="line">    <span class="keyword">return</span> <span class="keyword">nil</span></div><div class="line"><span class="keyword">end</span></div><div class="line"></div><div class="line"><span class="keyword">local</span> <span class="function"><span class="keyword">function</span> <span class="title">class</span><span class="params">(...)</span></span></div><div class="line">    <span class="keyword">local</span> cls = &#123; ctor = <span class="function"><span class="keyword">function</span> <span class="params">()</span></span> <span class="keyword">end</span>&#125;</div><div class="line">    <span class="keyword">local</span> supers = &#123;...&#125;</div><div class="line">    <span class="built_in">setmetatable</span>(cls, &#123;__index = <span class="function"><span class="keyword">function</span> <span class="params">(_, key)</span></span></div><div class="line">        <span class="comment">-- 在查找table的时候，会把table的key传进来</span></div><div class="line">        <span class="keyword">return</span> search(key, supers)</div><div class="line">    <span class="keyword">end</span>&#125;)</div><div class="line"></div><div class="line">    <span class="keyword">if</span> <span class="built_in">next</span>(supers) <span class="keyword">then</span></div><div class="line">        <span class="comment">-- print_r(supers)</span></div><div class="line">        print_r(cls)</div><div class="line">    <span class="keyword">end</span></div><div class="line">    </div><div class="line">    <span class="function"><span class="keyword">function</span> <span class="title">cls.new</span><span class="params">(...)</span></span></div><div class="line">        <span class="keyword">local</span> instance = &#123;&#125;</div><div class="line">        <span class="built_in">setmetatable</span>(instance, &#123;__index = cls&#125;)</div><div class="line">        cls:ctor(...)</div><div class="line">        <span class="keyword">return</span> instance</div><div class="line">    <span class="keyword">end</span></div><div class="line">    <span class="keyword">return</span> cls</div><div class="line"><span class="keyword">end</span></div><div class="line"></div><div class="line"><span class="keyword">local</span> Human = class()</div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">Human:life</span><span class="params">()</span></span></div><div class="line">    <span class="built_in">print</span>(<span class="string">"almost 100 years."</span>)</div><div class="line"><span class="keyword">end</span></div><div class="line"><span class="keyword">local</span> Programmer = class()</div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">Programmer:coding</span><span class="params">()</span></span></div><div class="line">    <span class="built_in">print</span>(<span class="string">"sub 1 year."</span>)</div><div class="line"><span class="keyword">end</span></div><div class="line"><span class="keyword">local</span> My = class(Human, Programmer)</div><div class="line"><span class="keyword">local</span> yuzixin = My.new()</div><div class="line">yuzixin:life()</div><div class="line">yuzixin:coding()</div></pre></td></tr></table></figure></p>
<p>成功打印出结果<br>almost 100 years.<br>sub 1 year.<br>为什么能继承成功？原因如下：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">在yuzixin里找不到life和coding字段，去找元表cls，调用元方法__index</div><div class="line">__index调用函数serch，把所有的父类都找一遍</div><div class="line">成功找到</div></pre></td></tr></table></figure>
<p>多继承就这样成功啦！撒花！<br>注意写一次代码减少一年的生命哦……（悲伤doge脸</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[自定义自己的评论系统]]></title>
      <url>https://xianwx.github.io/2016/09/16/duoshuo-style/</url>
      <content type="html"><![CDATA[<p>今天逛本博客主题的编写者的<a href="http://moxfive.xyz/" target="_blank" rel="external">博客</a>的时候，看到了他的评论系统效果十分的好看，于是好奇心起，也打算自己弄一个一样的。</p>
<h2 id="1-已经做好的文件"><a href="#1-已经做好的文件" class="headerlink" title="1. 已经做好的文件"></a>1. 已经做好的文件</h2><p>在多说设置里用的<a href="https://xianwx.github.io/show/test.css">css文件</a><br>样式的<a href="https://xianwx.github.io/show/embed.js">ejs文件</a><br>本地修改的<a href="https://xianwx.github.io/show/duoshuo.txt">ejs文件</a></p>
<h2 id="2-把embed-js传到云端"><a href="#2-把embed-js传到云端" class="headerlink" title="2. 把embed.js传到云端"></a>2. 把embed.js传到云端</h2><p>把刚才下载的<code>样式的ejs文件</code>上传到一个任意的地方<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">比如我是复制到本地blog/themes/yelee/source/js/下边，上传到git后访问的地址就是https://xianwx.github.io/js/embed.js)</div></pre></td></tr></table></figure></p>
<h2 id="3-浏览器、系统标识"><a href="#3-浏览器、系统标识" class="headerlink" title="3. 浏览器、系统标识"></a>3. 浏览器、系统标识</h2><ul>
<li>使用上边的<code>本地修改的ejs文件</code>，把内容整个拷贝粘贴到<code>yelee/layout/_partial/comments/duoshuo.ejs</code>（注：使用跟我一样主题的人用）</li>
<li>其它主题的人：找到多说的ejs，给其控件的src赋值为你的embed.ejs的地址<figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> duoshuoQuery = &#123;short_name:<span class="string">"&lt;%=theme.duoshuo.domain%&gt;"</span>&#125;;</div><div class="line">(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</div><div class="line">    <span class="keyword">var</span> ds = <span class="built_in">document</span>.createElement(<span class="string">'script'</span>);</div><div class="line">    ds.type = <span class="string">'text/javascript'</span>;ds.async = <span class="literal">true</span>;</div><div class="line"></div><div class="line">    <span class="string">`ds.src = 'http://moxfive.xyz/resources/embed.js'`</span>;</div><div class="line">    <span class="comment">/*上面是我自己的 embed.js 链接，请改为你自己的地址*/</span></div><div class="line"></div><div class="line">    ds.charset = <span class="string">'UTF-8'</span>;</div><div class="line">    (<span class="built_in">document</span>.getElementsByTagName(<span class="string">'head'</span>)[<span class="number">0</span>] </div><div class="line">     || <span class="built_in">document</span>.getElementsByTagName(<span class="string">'body'</span>)[<span class="number">0</span>]).appendChild(ds);</div><div class="line">&#125;)();</div></pre></td></tr></table></figure>
</li>
</ul>
<h2 id="4-引入-Font-Awesome"><a href="#4-引入-Font-Awesome" class="headerlink" title="4. 引入 Font Awesome"></a>4. 引入 Font Awesome</h2><p>打开theme/你的主题/layout/_partial/head.ejs<br>输入<br><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">"https://maxcdn.bootstrapcdn.com/font-awesome/4.4.0/css/font-awesome.min.css"</span>&gt;</span></div></pre></td></tr></table></figure></p>
<p><code>如果已经有了就不需要加了</code></p>
<h2 id="5-添加css"><a href="#5-添加css" class="headerlink" title="5. 添加css"></a>5. 添加css</h2><p>打开<code>http://你的多说域名.duoshuo.com/admin/settings/</code><br>拷贝<code>样式的ejs文件</code>的内容<br>按照<a href="http://wsgzao.github.io/post/duoshuo/#多说后台自定义CSS" target="_blank" rel="external">后台添加css</a>里的步骤，添加自定义css</p>
<h3 id="①-博主标志"><a href="#①-博主标志" class="headerlink" title="① 博主标志"></a>① 博主标志</h3><p>在评论里，点自己的头像，进入<a href="http://duoshuo.com/settings/avatar/页面，点自己名字，进入http://duoshuo.com/profile/你的uid/界面，复制你的uid" target="_blank" rel="external">http://duoshuo.com/settings/avatar/页面，点自己名字，进入http://duoshuo.com/profile/你的uid/界面，复制你的uid</a><br>打开刚才的embed.js文件，把你的uid复制到里边“你的uid”位置<br><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">sskadmin</span>(<span class="params">e</span>) </span>&#123;</div><div class="line">    <span class="keyword">var</span> ssk = <span class="string">''</span>;</div><div class="line">    <span class="keyword">if</span> (e.user_id == 你的uid) &#123;</div><div class="line">        <span class="keyword">if</span> (checkMobile()) &#123;</div><div class="line">            ssk = <span class="string">'&lt;span class="ua"&gt;&lt;span class="sskadmin"&gt;博主&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;br&gt;'</span>;</div><div class="line">        &#125; <span class="keyword">else</span> &#123;</div><div class="line">            ssk = <span class="string">'&lt;span class="ua"&gt;&lt;span class="sskadmin"&gt;博主&lt;/span&gt;&lt;/span&gt;'</span>;</div><div class="line">        &#125;</div><div class="line">    &#125; <span class="keyword">else</span> &#123;</div><div class="line">        <span class="keyword">if</span> (checkMobile()) &#123;</div><div class="line">            ssk = <span class="string">'&lt;br&gt;&lt;br&gt;'</span>;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">return</span> ssk;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>并确保刚才添加到后台的css里有以下代码（刚才下的已经自带了）：<br><figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/*博主标记 CSS*/</span></div><div class="line"><span class="selector-class">.sskadmin</span> &#123;</div><div class="line">    <span class="attribute">background-color</span>: <span class="number">#00a67c</span><span class="meta">!important</span>;</div><div class="line">    <span class="attribute">border-color</span>: <span class="number">#01B171</span><span class="meta">!important</span>;</div><div class="line">    <span class="attribute">border-radius</span>: <span class="number">4px</span>;</div><div class="line">    <span class="attribute">padding</span>: <span class="number">0</span> <span class="number">5px</span><span class="meta">!important</span>;</div><div class="line">    <span class="attribute">opacity</span>: .<span class="number">4</span>;</div><div class="line">&#125;</div><div class="line"><span class="selector-class">.sskadmin</span><span class="selector-pseudo">:hover</span> &#123;</div><div class="line">    <span class="attribute">opacity</span>: <span class="number">1</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p><strong>以下内容上文提供的下载的css都已经有了，只是讲解其功能，不喜欢可以删掉</strong></p>
<h3 id="②-鼠标悬停旋转头像"><a href="#②-鼠标悬停旋转头像" class="headerlink" title="② 鼠标悬停旋转头像"></a>② 鼠标悬停旋转头像</h3><figure class="highlight scss"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/*头像样式*/</span></div><div class="line"><span class="selector-id">#ds-reset</span> <span class="selector-class">.ds-avatar</span>&#123;<span class="attribute">background</span>:none <span class="meta">!important</span>; <span class="attribute">box-shadow</span>:none <span class="meta">!important</span>;&#125;</div><div class="line"><span class="selector-id">#ds-reset</span> <span class="selector-class">.ds-avatar</span> <span class="selector-tag">img</span> , <span class="selector-id">#ds-thread</span> <span class="selector-id">#ds-reset</span> <span class="selector-tag">ul</span><span class="selector-class">.ds-children</span> <span class="selector-class">.ds-avatar</span> <span class="selector-tag">img</span>&#123;<span class="attribute">width</span>:<span class="number">50px</span> <span class="meta">!important</span>;<span class="attribute">height</span>: <span class="number">50px</span> <span class="meta">!important</span>;-webkit-<span class="attribute">transition</span>: .<span class="number">9s</span>;-moz-<span class="attribute">transition</span>: .<span class="number">9s</span>;-o-<span class="attribute">transition</span>: .<span class="number">9s</span>;-ms-<span class="attribute">transition</span>: .<span class="number">9s</span>;<span class="attribute">padding</span>: <span class="number">2px</span>;<span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#ddd</span>;<span class="attribute">background</span>: <span class="number">#fff</span>;&#125;</div><div class="line"><span class="comment">/*鼠标悬停旋转头像*/</span></div><div class="line"><span class="selector-class">.ds-post</span>:hover <span class="selector-class">.ds-avatar</span> <span class="selector-tag">img</span>&#123;<span class="attribute">transform</span>:rotate(<span class="number">360deg</span>);-webkit-<span class="attribute">transform</span>:rotate(<span class="number">360deg</span>);-moz-<span class="attribute">transform</span>:rotate(<span class="number">360deg</span>);-o-<span class="attribute">transform</span>:rotate(<span class="number">360deg</span>);-ms-<span class="attribute">transform</span>:rotate(<span class="number">360deg</span>);<span class="attribute">border-radius</span>:<span class="number">30px</span> <span class="meta">!important</span>;&#125;</div><div class="line"><span class="selector-id">#ds-reset</span> <span class="selector-class">.ds-avatar</span> <span class="selector-tag">img</span>:hover&#123;<span class="attribute">transform</span>:rotate(<span class="number">360deg</span>);-webkit-<span class="attribute">transform</span>:rotate(<span class="number">360deg</span>);-moz-<span class="attribute">transform</span>:rotate(<span class="number">360deg</span>);-o-<span class="attribute">transform</span>:rotate(<span class="number">360deg</span>);-ms-<span class="attribute">transform</span>:rotate(<span class="number">360deg</span>);<span class="attribute">border-radius</span>:<span class="number">30px</span> <span class="meta">!important</span>;&#125;</div></pre></td></tr></table></figure>
<h3 id="③-通用样式"><a href="#③-通用样式" class="headerlink" title="③ 通用样式"></a>③ 通用样式</h3><figure class="highlight scss"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div></pre></td><td class="code"><pre><div class="line"><span class="selector-id">#ds-thread</span> <span class="selector-id">#ds-reset</span> <span class="selector-class">.ds-comment-body</span>, <span class="selector-id">#ds-thread</span> <span class="selector-id">#ds-reset</span> <span class="selector-tag">ul</span><span class="selector-class">.ds-children</span> <span class="selector-class">.ds-comment-body</span>&#123;<span class="attribute">padding-left</span>:<span class="number">70px</span> <span class="meta">!important</span>;&#125;</div><div class="line"><span class="selector-id">#ds-thread</span> <span class="selector-id">#ds-reset</span> <span class="selector-class">.ds-comment-body</span>, <span class="selector-id">#ds-thread</span> <span class="selector-id">#ds-reset</span> <span class="selector-tag">ul</span><span class="selector-class">.ds-children</span> <span class="selector-class">.ds-comment-body</span>&#123;<span class="attribute">padding-left</span>:<span class="number">70px</span> <span class="meta">!important</span>;&#125;</div><div class="line"><span class="selector-class">.ds-post</span>:hover&#123;<span class="attribute">background</span>:<span class="number">#eee</span> <span class="meta">!important</span>;&#125;</div><div class="line"><span class="selector-id">#ds-thread</span> <span class="selector-id">#ds-reset</span> <span class="selector-tag">ul</span><span class="selector-class">.ds-children</span> <span class="selector-class">.ds-avatar</span>&#123;<span class="attribute">width</span>:<span class="number">50px</span> <span class="meta">!important</span>;&#125;</div><div class="line"><span class="selector-id">#ds-thread</span> <span class="selector-id">#ds-reset</span> <span class="selector-class">.ds-replybox</span>&#123;<span class="attribute">padding</span>: <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">80px</span> <span class="meta">!important</span>;&#125;</div><div class="line"><span class="selector-id">#ds-reset</span> <span class="selector-id">#ds-ctx</span> <span class="selector-class">.ds-ctx-entry</span> <span class="selector-class">.ds-ctx-body</span>&#123;<span class="attribute">margin-left</span>: <span class="number">68px</span> <span class="meta">!important</span>;&#125;</div><div class="line"><span class="selector-id">#ds-recent-comments</span> <span class="selector-tag">li</span><span class="selector-class">.ds-comment</span>:nth-of-type(1)&#123;<span class="attribute">border</span>:none <span class="meta">!important</span>;&#125;</div><div class="line"><span class="selector-id">#ds-thread</span>&#123; </div><div class="line">    <span class="attribute">border-radius</span>: <span class="number">3px</span>;</div><div class="line">&#125;</div><div class="line"><span class="comment">/** 多说最近留言样式 **/</span></div><div class="line"><span class="selector-id">#ds-recent-comments</span> <span class="selector-class">.ds-avatar</span> <span class="selector-tag">img</span>&#123;   </div><div class="line">    <span class="attribute">width</span>:<span class="number">54px</span>;<span class="attribute">height</span>:<span class="number">54px</span>; </div><div class="line">    <span class="attribute">border-radius</span>: <span class="number">50%</span>; </div><div class="line">    -webkit-<span class="attribute">border-radius</span>: <span class="number">50%</span>; </div><div class="line">    -moz-<span class="attribute">border-radius</span>:<span class="number">50%</span>;   </div><div class="line">    <span class="attribute">box-shadow</span>: inset <span class="number">0</span> -<span class="number">1px</span> <span class="number">0</span> <span class="number">#3333</span>sf;<span class="comment">/*设置图像阴影效果*/</span>  </div><div class="line">    -webkit-<span class="attribute">box-shadow</span>: inset <span class="number">0</span> -<span class="number">1px</span> <span class="number">0</span> <span class="number">#3333</span>sf;   </div><div class="line">    -webkit-<span class="attribute">transition</span>: <span class="number">0.4s</span>;      </div><div class="line">    -webkit-<span class="attribute">transition</span>: -webkit-transform <span class="number">0.4s</span> ease-out;   </div><div class="line">    <span class="attribute">transition</span>: transform <span class="number">0.4s</span> ease-out;</div><div class="line">    -moz-<span class="attribute">transition</span>: -moz-transform <span class="number">0.4s</span> ease-out;   </div><div class="line">&#125;    </div><div class="line"><span class="selector-id">#ds-recent-comments</span> <span class="selector-class">.ds-avatar</span> <span class="selector-tag">img</span>:hover&#123;  </div><div class="line">    <span class="attribute">box-shadow</span>: <span class="number">0</span> <span class="number">0</span> <span class="number">10px</span> <span class="number">#fff</span>; rgba(255,255,255,<span class="selector-class">.6</span>), inset 0 0 20px rgba(255,255,255,1);   </div><div class="line">    -webkit-<span class="attribute">box-shadow</span>: <span class="number">0</span> <span class="number">0</span> <span class="number">10px</span> <span class="number">#fff</span>; rgba(255,255,255,<span class="selector-class">.6</span>), inset 0 0 20px rgba(255,255,255,1);   </div><div class="line">    <span class="attribute">transform</span>: rotateZ(<span class="number">360deg</span>);</div><div class="line">    -webkit-<span class="attribute">transform</span>: rotateZ(<span class="number">360deg</span>);   </div><div class="line">    -moz-<span class="attribute">transform</span>: rotateZ(<span class="number">360deg</span>);   </div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="④-按钮样式"><a href="#④-按钮样式" class="headerlink" title="④ 按钮样式"></a>④ 按钮样式</h3><p>修改了透明度、背景、边框样式<br><figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"><span class="selector-class">.ds-meta</span> &#123;</div><div class="line">    <span class="attribute">opacity</span>: .<span class="number">5</span>;</div><div class="line">    &#125;</div><div class="line"><span class="selector-class">.ds-meta</span><span class="selector-pseudo">:hover</span> &#123;</div><div class="line">    <span class="attribute">opacity</span>: <span class="number">1</span>;</div><div class="line">    &#125;</div><div class="line"><span class="selector-id">#ds-thread</span> <span class="selector-id">#ds-reset</span> <span class="selector-tag">a</span><span class="selector-class">.ds-like-thread-button</span> &#123;</div><div class="line">    <span class="attribute">background-image</span>: none;</div><div class="line">    <span class="attribute">background-color</span>: <span class="number">#fee2d3</span>;</div><div class="line">    <span class="attribute">border</span>: none;</div><div class="line">    <span class="attribute">text-shadow</span>: none;</div><div class="line">    <span class="attribute">font-family</span>: inherit;</div><div class="line">    &#125;</div></pre></td></tr></table></figure></p>
<h3 id="⑤-剩余自定义样式查看参考资料"><a href="#⑤-剩余自定义样式查看参考资料" class="headerlink" title="⑤ 剩余自定义样式查看参考资料"></a>⑤ 剩余自定义样式查看参考资料</h3><blockquote>
<p><a href="http://moxfive.xyz/2015/09/29/duoshuo-style/" target="_blank" rel="external">多说样式折腾记录 — 添加 UA 浏览器标识、旋转头像等</a></p>
</blockquote>
<h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><blockquote>
<p><a href="http://moxfive.xyz/2015/09/29/duoshuo-style/" target="_blank" rel="external">多说样式折腾记录 — 添加 UA 浏览器标识、旋转头像等</a><br><a href="https://wsgzao.github.io/post/duoshuo/#多说后台自定义CSS" target="_blank" rel="external">多说后台自定义css</a></p>
</blockquote>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[加强你的quick look]]></title>
      <url>https://xianwx.github.io/2016/09/09/power-up-your-quick-look/</url>
      <content type="html"><![CDATA[<h2 id="quick-look"><a href="#quick-look" class="headerlink" title="quick look"></a>quick look</h2><p>用mac的同学经常用<code>空格</code>键来预览一些文件的内容吧，在只想观看但是不打算修改内容的话用quick look正好，比如看文本，看psd的图片。<br>但是系统自带的只支持预览一些文本以及图像。</p>
<h2 id="扩展"><a href="#扩展" class="headerlink" title="扩展"></a>扩展</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">1. 安装brew</div><div class="line">    自行Google</div><div class="line">2. 安装brew cask</div><div class="line">    brew tap phinze/homebrew-cask &amp;&amp; brew install brew-cask</div><div class="line">3. 使用命令行来安装插件：brew cask install ***</div></pre></td></tr></table></figure>
<h2 id="插件名收集"><a href="#插件名收集" class="headerlink" title="插件名收集"></a>插件名收集</h2><ul>
<li>比如写博客要用到markdown，装个预览.md的插件吧：brew cask install qlmarkdown</li>
<li>需要预览无后缀名的文件：brew cask install qlstephen</li>
<li>程序员喜欢的，可以高亮代码的（可惜不能高亮lua：brew cask install qlcolorcode</li>
<li>需要预览json的（也可以到<a href="http://www.kjson.com/jsoneditor/" target="_blank" rel="external">kjson</a>：brew cask install quicklook-json</li>
<li>如果有安装BetterZip，安装这个可以通过BetterZip查看压缩文件的信息以及文件目录：brew cask install betterzipql</li>
<li>做游戏的可能会需要预览csv文件：brew cask install quicklook-csv</li>
<li>预览图片的时候显示分辨率和大小(过程中可能需要输入密码：brew cask install qlimagesize</li>
</ul>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[如何使用github + hexo搭建一个属于自己的博客]]></title>
      <url>https://xianwx.github.io/2016/09/08/build-hexo-blog-with-github-pages/</url>
      <content type="html"><![CDATA[<h2 id="1-简介"><a href="#1-简介" class="headerlink" title="1. 简介"></a>1. 简介</h2><p>hexo是一个静态博客程序，基于Node.js。有很多主题，大多都简约优雅，适合技术人员以及一些不喜欢博客里充斥着广告，奇怪的布局的人。而且hexo用markdown写，语法比较简单。<br>github可以托管一个通过特殊的地址访问到的page，可以通过hexo创建好博客然后托管到github上，空间也基本足够。<br>我使用它是因为我写博客只是想记录一些东西，自己的记忆力太差。而且如果分享出来如果有人一起研究探讨，甚至能帮助到其他人，那是多么快乐的一件事情。</p>
<h2 id="2-配置"><a href="#2-配置" class="headerlink" title="2. 配置"></a>2. 配置</h2><p><strong>本文是for Mac</strong><br>Mac自带了<a href="https://git-scm.com/downloads" target="_blank" rel="external">git</a><br>配置好ssh<br>安装<a href="http://nodejs.org/" target="_blank" rel="external">Node.js</a><br>确保npm安装成功</p>
<h2 id="3-在github上创建创库"><a href="#3-在github上创建创库" class="headerlink" title="3. 在github上创建创库"></a>3. 在github上创建创库</h2><p>每个github账户都可以创建一个可以直接通过‘用户名.github.io’访问到的仓库。<br>步骤：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">① 在github上新建一个responsitory</div><div class="line">② 给仓库命名为自己的用户名.github.io</div><div class="line">③ 保存，过一小段时间就可以通过`用户名.github.io`访问了。</div><div class="line">④ clone到本地，本文假设clone到一个名为blog的文件夹下。</div></pre></td></tr></table></figure></p>
<h2 id="4-安装hexo"><a href="#4-安装hexo" class="headerlink" title="4. 安装hexo"></a>4. 安装hexo</h2><p>使用命令行安装：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm install hexo-cli -g   #-g表示全局安装, npm默认为当前项目安装</div></pre></td></tr></table></figure></p>
<h2 id="5-运行hexo"><a href="#5-运行hexo" class="headerlink" title="5. 运行hexo"></a>5. 运行hexo</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">$ cd blog</div><div class="line">$ hexo init #初始化</div><div class="line">$ hexo g #这条是生成静态界面，也可以用hexo generate，g是缩写</div><div class="line">$ hexo s #hexo server的缩写，启动服务器，现在你可以打开`http://localhost:4040/`看到你的界面了，初始化会创建好一个页面</div></pre></td></tr></table></figure>
<h2 id="6-设置你想要的主题"><a href="#6-设置你想要的主题" class="headerlink" title="6. 设置你想要的主题"></a>6. 设置你想要的主题</h2><p>我使用的主题是<strong><a href="https://github.com/MOxFIVE/hexo-theme-yelee" target="_blank" rel="external">yelee</a></strong><br>很简单，运行<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ git clone https://github.com/MOxFIVE/hexo-theme-yelee.git themes/yelee</div></pre></td></tr></table></figure></p>
<p>然后修改blog下的_config.yml文件<br><code>theme: yelee</code></p>
<h2 id="7-部署到github"><a href="#7-部署到github" class="headerlink" title="7. 部署到github"></a>7. 部署到github</h2><p>修改_config.yml<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">deploy:</div><div class="line">  type: git</div><div class="line">  repository: https://github.com/xianwx/xianwx.github.io.git(这里改成你自己的刚才新建的github responsitory)</div><div class="line">  branch: master</div></pre></td></tr></table></figure></p>
<p>安装插件<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm install hexo-deployer-git --save</div></pre></td></tr></table></figure></p>
<p>设置成功过后执行<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo d #deploy的缩写，首次会让你输入账号密码</div></pre></td></tr></table></figure></p>
<p>等待上传成功，可以打开<strong><a href="http://xianwx.github.io">http://xianwx.github.io</a></strong>看效果啦！</p>
<p>– todo 新建一个分支保存博客程序，避免换电脑的时候悲剧</p>
<h2 id="8-添加多说"><a href="#8-添加多说" class="headerlink" title="8. 添加多说"></a>8. 添加多说</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">① 到http://duoshuo.com/create-site/新建一个站点</div><div class="line">② 站点地址填http://xianwx.github.io 这个，域名随便写个，比如我是yuzixin</div><div class="line"></div><div class="line">如果你使用跟我不一样的主题，跳过不看后面这步，去自己看主题里的配置方法。</div><div class="line">③ 打开yelee/_config.yml，找到duoshuo，把on的值改为true，domain: 写自己的域名（上边的yuzixin）</div></pre></td></tr></table></figure>
<h2 id="9-接入打赏"><a href="#9-接入打赏" class="headerlink" title="9. 接入打赏"></a>9. 接入打赏</h2><p>打开themes/yelee/layout/_partial/article.ejs下边，在div模块加上下边代码<br><a href="https://xianwx.github.io/show/article.txt">代码段</a></p>
<p>然后在主题的_config.yml里加上<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">donate:</div><div class="line">  enable: true</div><div class="line">  text: 会不会有人就是想不开要打赏我呢？这是个问题！</div><div class="line">  wechat: http://odkw6ym6r.bkt.clouddn.com/weixin.png</div><div class="line">  alipay: http://odkw6ym6r.bkt.clouddn.com/zhifubao.png</div></pre></td></tr></table></figure></p>
<h2 id="10-插件配置"><a href="#10-插件配置" class="headerlink" title="10. 插件配置"></a>10. 插件配置</h2><p>在_config.yml里，有个plugins<br>在安装了插件过后，就可以在这里选择使用格式是:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">Plugins: -hexo-generator-feed -hexo-generator-search</div></pre></td></tr></table></figure></p>
<p>(我分行写会报错，只能一整行写过去)<br>更多plugins：<a href="https://hexo.io/plugins/" target="_blank" rel="external">https://hexo.io/plugins/</a></p>
<h2 id="11-图床"><a href="#11-图床" class="headerlink" title="11. 图床"></a>11. 图床</h2><p>到<a href="https://portal.qiniu.com/create" target="_blank" rel="external">https://portal.qiniu.com/create</a>注册一个账号<br>参考<a href="http://www.jianshu.com/p/6dce6094bf61" target="_blank" rel="external">如何使用七牛</a></p>
<h2 id="12-剩下的一些杂七杂八的配置"><a href="#12-剩下的一些杂七杂八的配置" class="headerlink" title="12. 剩下的一些杂七杂八的配置"></a>12. 剩下的一些杂七杂八的配置</h2><p>预告：rss，写博客的方法，写about me，markdown语法，– todo 自己还需要研究的：购买域名<br>先欠着，往后补上，回家去咯~</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[hello world]]></title>
      <url>https://xianwx.github.io/2016/08/27/hello-world/</url>
      <content type="html"><![CDATA[<p>一直想弄个自己的博客，但是去了很多博客网站都觉得冗余信息太多，我需要的是漂漂亮亮的简洁的博客，于是找到了hexo + github.</p>
<p>慢慢会补上各个博文的，github也会慢慢上传些代码。</p>
]]></content>
    </entry>
    
  
  
</search>
